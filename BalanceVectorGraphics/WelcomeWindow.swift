//
//  WelcomeWindow.swift
//  Balance
//
//  Created by Christian Baroni on 12/13/16.
//  Copyright © 2016 Balance. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import Cocoa

public class WelcomeWindow : NSObject {

    //// Drawing Methods

    public dynamic class func drawSubscribeButton(frame: NSRect = NSRect(x: 0, y: 0, width: 272, height: 46), subscribeButtonString: String = "Subscribe — $4.99 per month", original: Bool = true, pressed: Bool = false, buttonTextColor: NSColor) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let subscribeButtonColor = NSColor(calibratedRed: 0.102, green: 0.655, blue: 1, alpha: 1)
        let subscribeButtonPressedColor = NSColor(calibratedRed: 0, green: 0.529, blue: 0.859, alpha: 1)

        if (original) {
            //// background Drawing
            let backgroundPath = NSBezierPath(roundedRect: NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height), xRadius: 8, yRadius: 8)
            subscribeButtonColor.setFill()
            backgroundPath.fill()
        }


        if (pressed) {
            //// backgroundPressed Drawing
            let backgroundPressedPath = NSBezierPath(roundedRect: NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height), xRadius: 8, yRadius: 8)
            subscribeButtonPressedColor.setFill()
            backgroundPressedPath.fill()
        }


        //// Text Drawing
        let textRect = NSRect(x: frame.minX + fastFloor((frame.width - 10) * 0.03817 + 0.5), y: frame.minY + fastFloor((frame.height - 10.5) * 0.35211) + 0.5, width: frame.width - 10 - fastFloor((frame.width - 10) * 0.03817 + 0.5), height: frame.height - 11 - fastFloor((frame.height - 10.5) * 0.35211))
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 15), NSForegroundColorAttributeName: NSColor.white, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = subscribeButtonString.boundingRect(with: NSSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes).height
        let textTextRect: NSRect = NSRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight)
        NSGraphicsContext.saveGraphicsState()
        NSRectClip(textRect)
        subscribeButtonString.draw(in: textTextRect.offsetBy(dx: 0, dy: 0), withAttributes: textFontAttributes)
        NSGraphicsContext.restoreGraphicsState()
    }

    public dynamic class func drawContactLink(frame: NSRect = NSRect(x: 0, y: 0, width: 272, height: 26), contactLinkString: String = "Contact", original: Bool = true, pressed: Bool = false, buttonTextColor: NSColor) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let firstLinkColor = NSColor(calibratedRed: 0.369, green: 0.475, blue: 1, alpha: 1)
        let firstLinkColorPressed = NSColor(calibratedRed: 0.294, green: 0.38, blue: 0.8, alpha: 1)


        //// Subframes
        let linkOriginal: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)
        let linkPressed: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)


        if (original) {
            //// linkOriginal
            //// icon Drawing
            let iconPath = NSBezierPath()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.77614 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02139 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.07419 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.77620 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.22386 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.07420 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02140 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.22380 * linkOriginal.height))
            iconPath.close()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.06643 * linkOriginal.width, y: linkOriginal.minY + 0.74817 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.06784 * linkOriginal.width, y: linkOriginal.minY + 0.74749 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.06687 * linkOriginal.width, y: linkOriginal.minY + 0.75084 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.06742 * linkOriginal.width, y: linkOriginal.minY + 0.75057 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.06836 * linkOriginal.width, y: linkOriginal.minY + 0.73384 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.06825 * linkOriginal.width, y: linkOriginal.minY + 0.74440 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.06845 * linkOriginal.width, y: linkOriginal.minY + 0.73907 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.06089 * linkOriginal.width, y: linkOriginal.minY + 0.32589 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.06013 * linkOriginal.width, y: linkOriginal.minY + 0.31481 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.06080 * linkOriginal.width, y: linkOriginal.minY + 0.32122 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.06052 * linkOriginal.width, y: linkOriginal.minY + 0.31717 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05883 * linkOriginal.width, y: linkOriginal.minY + 0.31356 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05973 * linkOriginal.width, y: linkOriginal.minY + 0.31244 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05926 * linkOriginal.width, y: linkOriginal.minY + 0.31199 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04720 * linkOriginal.width, y: linkOriginal.minY + 0.35917 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04224 * linkOriginal.width, y: linkOriginal.minY + 0.25534 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04121 * linkOriginal.width, y: linkOriginal.minY + 0.25026 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04205 * linkOriginal.width, y: linkOriginal.minY + 0.25134 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04162 * linkOriginal.width, y: linkOriginal.minY + 0.24923 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04049 * linkOriginal.width, y: linkOriginal.minY + 0.25966 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04079 * linkOriginal.width, y: linkOriginal.minY + 0.25129 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04049 * linkOriginal.width, y: linkOriginal.minY + 0.25518 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04049 * linkOriginal.width, y: linkOriginal.minY + 0.37074 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04138 * linkOriginal.width, y: linkOriginal.minY + 0.39693 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04051 * linkOriginal.width, y: linkOriginal.minY + 0.38025 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04082 * linkOriginal.width, y: linkOriginal.minY + 0.38945 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.06038 * linkOriginal.width, y: linkOriginal.minY + 0.65633 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04202 * linkOriginal.width, y: linkOriginal.minY + 0.40465 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.06038 * linkOriginal.width, y: linkOriginal.minY + 0.65633 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.03482 * linkOriginal.width, y: linkOriginal.minY + 0.41793 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.06038 * linkOriginal.width, y: linkOriginal.minY + 0.65633 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.03579 * linkOriginal.width, y: linkOriginal.minY + 0.42614 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.03192 * linkOriginal.width, y: linkOriginal.minY + 0.41209 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.03402 * linkOriginal.width, y: linkOriginal.minY + 0.41081 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.03292 * linkOriginal.width, y: linkOriginal.minY + 0.40860 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.02146 * linkOriginal.width, y: linkOriginal.minY + 0.44953 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.02059 * linkOriginal.width, y: linkOriginal.minY + 0.46103 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02098 * linkOriginal.width, y: linkOriginal.minY + 0.45125 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02064 * linkOriginal.width, y: linkOriginal.minY + 0.45575 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.02124 * linkOriginal.width, y: linkOriginal.minY + 0.47405 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02055 * linkOriginal.width, y: linkOriginal.minY + 0.46631 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02080 * linkOriginal.width, y: linkOriginal.minY + 0.47141 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.06643 * linkOriginal.width, y: linkOriginal.minY + 0.74817 * linkOriginal.height))
            iconPath.close()
            iconPath.windingRule = .evenOddWindingRule
            firstLinkColor.setFill()
            iconPath.fill()


            //// Text Drawing
            let textRect = NSRect(x: linkOriginal.minX + fastFloor(linkOriginal.width * 0.12132 + 0.5), y: linkOriginal.minY + fastFloor(linkOriginal.height * 0.13462) + 0.5, width: fastFloor(linkOriginal.width * 1.00000 + 0.5) - fastFloor(linkOriginal.width * 0.12132 + 0.5), height: fastFloor(linkOriginal.height * 0.94231) - fastFloor(linkOriginal.height * 0.13462))
            let textStyle = NSMutableParagraphStyle()
            textStyle.alignment = .left
            let textFontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: firstLinkColor, NSParagraphStyleAttributeName: textStyle]

            let textTextHeight: CGFloat = contactLinkString.boundingRect(with: NSSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes).height
            let textTextRect: NSRect = NSRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(textRect)
            contactLinkString.draw(in: textTextRect.offsetBy(dx: 0, dy: 1), withAttributes: textFontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }


        if (pressed) {
            //// linkPressed
            //// icon 2 Drawing
            let icon2Path = NSBezierPath()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.77614 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02139 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.07419 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.77620 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.22386 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.07420 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02140 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.22380 * linkPressed.height))
            icon2Path.close()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.06643 * linkPressed.width, y: linkPressed.minY + 0.74817 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.06784 * linkPressed.width, y: linkPressed.minY + 0.74749 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.06687 * linkPressed.width, y: linkPressed.minY + 0.75084 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.06742 * linkPressed.width, y: linkPressed.minY + 0.75057 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.06836 * linkPressed.width, y: linkPressed.minY + 0.73384 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.06825 * linkPressed.width, y: linkPressed.minY + 0.74440 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.06845 * linkPressed.width, y: linkPressed.minY + 0.73907 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.06089 * linkPressed.width, y: linkPressed.minY + 0.32589 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.06013 * linkPressed.width, y: linkPressed.minY + 0.31481 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.06080 * linkPressed.width, y: linkPressed.minY + 0.32122 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.06052 * linkPressed.width, y: linkPressed.minY + 0.31717 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05883 * linkPressed.width, y: linkPressed.minY + 0.31356 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05973 * linkPressed.width, y: linkPressed.minY + 0.31244 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05926 * linkPressed.width, y: linkPressed.minY + 0.31199 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04720 * linkPressed.width, y: linkPressed.minY + 0.35917 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04224 * linkPressed.width, y: linkPressed.minY + 0.25534 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04121 * linkPressed.width, y: linkPressed.minY + 0.25026 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04205 * linkPressed.width, y: linkPressed.minY + 0.25134 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04162 * linkPressed.width, y: linkPressed.minY + 0.24923 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04049 * linkPressed.width, y: linkPressed.minY + 0.25966 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04079 * linkPressed.width, y: linkPressed.minY + 0.25129 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04049 * linkPressed.width, y: linkPressed.minY + 0.25518 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04049 * linkPressed.width, y: linkPressed.minY + 0.37074 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04138 * linkPressed.width, y: linkPressed.minY + 0.39693 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04051 * linkPressed.width, y: linkPressed.minY + 0.38025 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04082 * linkPressed.width, y: linkPressed.minY + 0.38945 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.06038 * linkPressed.width, y: linkPressed.minY + 0.65633 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04202 * linkPressed.width, y: linkPressed.minY + 0.40465 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.06038 * linkPressed.width, y: linkPressed.minY + 0.65633 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.03482 * linkPressed.width, y: linkPressed.minY + 0.41793 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.06038 * linkPressed.width, y: linkPressed.minY + 0.65633 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.03579 * linkPressed.width, y: linkPressed.minY + 0.42614 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.03192 * linkPressed.width, y: linkPressed.minY + 0.41209 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.03402 * linkPressed.width, y: linkPressed.minY + 0.41081 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.03292 * linkPressed.width, y: linkPressed.minY + 0.40860 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.02146 * linkPressed.width, y: linkPressed.minY + 0.44953 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.02059 * linkPressed.width, y: linkPressed.minY + 0.46103 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02098 * linkPressed.width, y: linkPressed.minY + 0.45125 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02064 * linkPressed.width, y: linkPressed.minY + 0.45575 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.02124 * linkPressed.width, y: linkPressed.minY + 0.47405 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02055 * linkPressed.width, y: linkPressed.minY + 0.46631 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02080 * linkPressed.width, y: linkPressed.minY + 0.47141 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.06643 * linkPressed.width, y: linkPressed.minY + 0.74817 * linkPressed.height))
            icon2Path.close()
            icon2Path.windingRule = .evenOddWindingRule
            firstLinkColorPressed.setFill()
            icon2Path.fill()


            //// Text 2 Drawing
            let text2Rect = NSRect(x: linkPressed.minX + fastFloor(linkPressed.width * 0.12132 + 0.5), y: linkPressed.minY + fastFloor(linkPressed.height * 0.13462) + 0.5, width: fastFloor(linkPressed.width * 1.00000 + 0.5) - fastFloor(linkPressed.width * 0.12132 + 0.5), height: fastFloor(linkPressed.height * 0.94231) - fastFloor(linkPressed.height * 0.13462))
            let text2Style = NSMutableParagraphStyle()
            text2Style.alignment = .left
            let text2FontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: firstLinkColorPressed, NSParagraphStyleAttributeName: text2Style]

            let text2TextHeight: CGFloat = contactLinkString.boundingRect(with: NSSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes).height
            let text2TextRect: NSRect = NSRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(text2Rect)
            contactLinkString.draw(in: text2TextRect.offsetBy(dx: 0, dy: 1), withAttributes: text2FontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }
    }

    public dynamic class func drawPricingLink(frame: NSRect = NSRect(x: 0, y: 0, width: 272, height: 26), pricingLinkString: String = "About our Pricing", original: Bool = true, pressed: Bool = false, buttonTextColor: NSColor) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let secondLinkColor = NSColor(calibratedRed: 0.325, green: 0.627, blue: 0.929, alpha: 1)
        let secondLinkColorPressed = NSColor(calibratedRed: 0.256, green: 0.493, blue: 0.73, alpha: 1)


        //// Subframes
        let linkOriginal: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)
        let linkPressed: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)


        if (original) {
            //// linkOriginal
            //// icon Drawing
            let iconPath = NSBezierPath()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.77614 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02139 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.07419 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.77620 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.22386 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.07420 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02140 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.22380 * linkOriginal.height))
            iconPath.close()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.05054 * linkOriginal.width, y: linkOriginal.minY + 0.35292 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05126 * linkOriginal.width, y: linkOriginal.minY + 0.33480 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05041 * linkOriginal.width, y: linkOriginal.minY + 0.34592 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05069 * linkOriginal.width, y: linkOriginal.minY + 0.33876 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.05440 * linkOriginal.width, y: linkOriginal.minY + 0.31291 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05528 * linkOriginal.width, y: linkOriginal.minY + 0.28714 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05520 * linkOriginal.width, y: linkOriginal.minY + 0.30730 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05556 * linkOriginal.width, y: linkOriginal.minY + 0.29683 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05318 * linkOriginal.width, y: linkOriginal.minY + 0.27084 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05500 * linkOriginal.width, y: linkOriginal.minY + 0.27746 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05415 * linkOriginal.width, y: linkOriginal.minY + 0.27083 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04798 * linkOriginal.width, y: linkOriginal.minY + 0.27084 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04199 * linkOriginal.width, y: linkOriginal.minY + 0.30049 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04566 * linkOriginal.width, y: linkOriginal.minY + 0.27083 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04346 * linkOriginal.width, y: linkOriginal.minY + 0.28172 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04038 * linkOriginal.width, y: linkOriginal.minY + 0.36777 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04051 * linkOriginal.width, y: linkOriginal.minY + 0.31927 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.03992 * linkOriginal.width, y: linkOriginal.minY + 0.34396 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04336 * linkOriginal.width, y: linkOriginal.minY + 0.52368 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04264 * linkOriginal.width, y: linkOriginal.minY + 0.54181 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04349 * linkOriginal.width, y: linkOriginal.minY + 0.53068 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04321 * linkOriginal.width, y: linkOriginal.minY + 0.53784 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.03950 * linkOriginal.width, y: linkOriginal.minY + 0.56369 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.03862 * linkOriginal.width, y: linkOriginal.minY + 0.58946 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.03870 * linkOriginal.width, y: linkOriginal.minY + 0.56931 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.03834 * linkOriginal.width, y: linkOriginal.minY + 0.57977 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04072 * linkOriginal.width, y: linkOriginal.minY + 0.60577 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.03890 * linkOriginal.width, y: linkOriginal.minY + 0.59914 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.03975 * linkOriginal.width, y: linkOriginal.minY + 0.60577 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04593 * linkOriginal.width, y: linkOriginal.minY + 0.60577 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05192 * linkOriginal.width, y: linkOriginal.minY + 0.57611 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04825 * linkOriginal.width, y: linkOriginal.minY + 0.60577 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05045 * linkOriginal.width, y: linkOriginal.minY + 0.59488 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05352 * linkOriginal.width, y: linkOriginal.minY + 0.50883 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05339 * linkOriginal.width, y: linkOriginal.minY + 0.55733 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05398 * linkOriginal.width, y: linkOriginal.minY + 0.53264 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.05054 * linkOriginal.width, y: linkOriginal.minY + 0.35292 * linkOriginal.height))
            iconPath.close()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.04527 * linkOriginal.width, y: linkOriginal.minY + 0.71139 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05116 * linkOriginal.width, y: linkOriginal.minY + 0.76428 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04552 * linkOriginal.width, y: linkOriginal.minY + 0.74294 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04815 * linkOriginal.width, y: linkOriginal.minY + 0.76652 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05706 * linkOriginal.width, y: linkOriginal.minY + 0.71139 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05418 * linkOriginal.width, y: linkOriginal.minY + 0.76652 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05681 * linkOriginal.width, y: linkOriginal.minY + 0.74294 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05116 * linkOriginal.width, y: linkOriginal.minY + 0.65851 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05681 * linkOriginal.width, y: linkOriginal.minY + 0.67984 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05418 * linkOriginal.width, y: linkOriginal.minY + 0.65627 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04527 * linkOriginal.width, y: linkOriginal.minY + 0.71139 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04815 * linkOriginal.width, y: linkOriginal.minY + 0.65627 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04552 * linkOriginal.width, y: linkOriginal.minY + 0.67984 * linkOriginal.height))
            iconPath.close()
            iconPath.windingRule = .evenOddWindingRule
            secondLinkColor.setFill()
            iconPath.fill()


            //// Text Drawing
            let textRect = NSRect(x: linkOriginal.minX + fastFloor(linkOriginal.width * 0.12132 + 0.5), y: linkOriginal.minY + fastFloor(linkOriginal.height * 0.13462) + 0.5, width: fastFloor(linkOriginal.width * 1.00000 + 0.5) - fastFloor(linkOriginal.width * 0.12132 + 0.5), height: fastFloor(linkOriginal.height * 0.94231) - fastFloor(linkOriginal.height * 0.13462))
            let textStyle = NSMutableParagraphStyle()
            textStyle.alignment = .left
            let textFontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: secondLinkColor, NSParagraphStyleAttributeName: textStyle]

            let textTextHeight: CGFloat = pricingLinkString.boundingRect(with: NSSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes).height
            let textTextRect: NSRect = NSRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(textRect)
            pricingLinkString.draw(in: textTextRect.offsetBy(dx: 0, dy: 1), withAttributes: textFontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }


        if (pressed) {
            //// linkPressed
            //// icon 2 Drawing
            let icon2Path = NSBezierPath()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.77614 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02139 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.07419 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.77620 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.22386 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.07420 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02140 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.22380 * linkPressed.height))
            icon2Path.close()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.05054 * linkPressed.width, y: linkPressed.minY + 0.35292 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05126 * linkPressed.width, y: linkPressed.minY + 0.33480 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05041 * linkPressed.width, y: linkPressed.minY + 0.34592 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05069 * linkPressed.width, y: linkPressed.minY + 0.33876 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.05440 * linkPressed.width, y: linkPressed.minY + 0.31291 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05528 * linkPressed.width, y: linkPressed.minY + 0.28714 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05520 * linkPressed.width, y: linkPressed.minY + 0.30730 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05556 * linkPressed.width, y: linkPressed.minY + 0.29683 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05318 * linkPressed.width, y: linkPressed.minY + 0.27084 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05500 * linkPressed.width, y: linkPressed.minY + 0.27746 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05415 * linkPressed.width, y: linkPressed.minY + 0.27083 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04798 * linkPressed.width, y: linkPressed.minY + 0.27084 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04199 * linkPressed.width, y: linkPressed.minY + 0.30049 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04566 * linkPressed.width, y: linkPressed.minY + 0.27083 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04346 * linkPressed.width, y: linkPressed.minY + 0.28172 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04038 * linkPressed.width, y: linkPressed.minY + 0.36777 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04051 * linkPressed.width, y: linkPressed.minY + 0.31927 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.03992 * linkPressed.width, y: linkPressed.minY + 0.34396 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04336 * linkPressed.width, y: linkPressed.minY + 0.52368 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04264 * linkPressed.width, y: linkPressed.minY + 0.54181 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04349 * linkPressed.width, y: linkPressed.minY + 0.53068 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04321 * linkPressed.width, y: linkPressed.minY + 0.53784 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.03950 * linkPressed.width, y: linkPressed.minY + 0.56369 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.03862 * linkPressed.width, y: linkPressed.minY + 0.58946 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.03870 * linkPressed.width, y: linkPressed.minY + 0.56931 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.03834 * linkPressed.width, y: linkPressed.minY + 0.57977 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04072 * linkPressed.width, y: linkPressed.minY + 0.60577 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.03890 * linkPressed.width, y: linkPressed.minY + 0.59914 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.03975 * linkPressed.width, y: linkPressed.minY + 0.60577 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04593 * linkPressed.width, y: linkPressed.minY + 0.60577 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05192 * linkPressed.width, y: linkPressed.minY + 0.57611 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04825 * linkPressed.width, y: linkPressed.minY + 0.60577 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05045 * linkPressed.width, y: linkPressed.minY + 0.59488 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05352 * linkPressed.width, y: linkPressed.minY + 0.50883 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05339 * linkPressed.width, y: linkPressed.minY + 0.55733 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05398 * linkPressed.width, y: linkPressed.minY + 0.53264 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.05054 * linkPressed.width, y: linkPressed.minY + 0.35292 * linkPressed.height))
            icon2Path.close()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.04527 * linkPressed.width, y: linkPressed.minY + 0.71139 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05116 * linkPressed.width, y: linkPressed.minY + 0.76428 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04552 * linkPressed.width, y: linkPressed.minY + 0.74294 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04815 * linkPressed.width, y: linkPressed.minY + 0.76652 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05706 * linkPressed.width, y: linkPressed.minY + 0.71139 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05418 * linkPressed.width, y: linkPressed.minY + 0.76652 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05681 * linkPressed.width, y: linkPressed.minY + 0.74294 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05116 * linkPressed.width, y: linkPressed.minY + 0.65851 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05681 * linkPressed.width, y: linkPressed.minY + 0.67984 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05418 * linkPressed.width, y: linkPressed.minY + 0.65627 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04527 * linkPressed.width, y: linkPressed.minY + 0.71139 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04815 * linkPressed.width, y: linkPressed.minY + 0.65627 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04552 * linkPressed.width, y: linkPressed.minY + 0.67984 * linkPressed.height))
            icon2Path.close()
            icon2Path.windingRule = .evenOddWindingRule
            secondLinkColorPressed.setFill()
            icon2Path.fill()


            //// Text 2 Drawing
            let text2Rect = NSRect(x: linkPressed.minX + fastFloor(linkPressed.width * 0.12132 + 0.5), y: linkPressed.minY + fastFloor(linkPressed.height * 0.13462) + 0.5, width: fastFloor(linkPressed.width * 1.00000 + 0.5) - fastFloor(linkPressed.width * 0.12132 + 0.5), height: fastFloor(linkPressed.height * 0.94231) - fastFloor(linkPressed.height * 0.13462))
            let text2Style = NSMutableParagraphStyle()
            text2Style.alignment = .left
            let text2FontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: secondLinkColorPressed, NSParagraphStyleAttributeName: text2Style]

            let text2TextHeight: CGFloat = pricingLinkString.boundingRect(with: NSSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes).height
            let text2TextRect: NSRect = NSRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(text2Rect)
            pricingLinkString.draw(in: text2TextRect.offsetBy(dx: 0, dy: 1), withAttributes: text2FontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }
    }

    public dynamic class func drawLearnMoreLink(frame: NSRect = NSRect(x: 0, y: 0, width: 272, height: 26), learnMoreLinkString: String = "Learn More", original: Bool = true, pressed: Bool = false, buttonTextColor: NSColor) {
        //// General Declarations
        let context = NSGraphicsContext.current()!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let thirdLinkColor = NSColor(calibratedRed: 0.325, green: 0.78, blue: 0.925, alpha: 1)
        let thirdLinkColorPressed = NSColor(calibratedRed: 0.257, green: 0.616, blue: 0.73, alpha: 1)


        //// Subframes
        let linkOriginal: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)
        let linkPressed: NSRect = NSRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)


        if (original) {
            //// linkOriginal
            //// icon Drawing
            let iconPath = NSBezierPath()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.77614 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02139 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.07419 * linkOriginal.width, y: linkOriginal.minY + 1.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.77620 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.09559 * linkOriginal.width, y: linkOriginal.minY + 0.22386 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.07420 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02140 * linkOriginal.width, y: linkOriginal.minY + 0.00000 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.00000 * linkOriginal.width, y: linkOriginal.minY + 0.22380 * linkOriginal.height))
            iconPath.close()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.07004 * linkOriginal.width, y: linkOriginal.minY + 0.76552 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.04297 * linkOriginal.width, y: linkOriginal.minY + 0.57653 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04050 * linkOriginal.width, y: linkOriginal.minY + 0.55063 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04199 * linkOriginal.width, y: linkOriginal.minY + 0.56969 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04115 * linkOriginal.width, y: linkOriginal.minY + 0.56089 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.02246 * linkOriginal.width, y: linkOriginal.minY + 0.26715 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.02273 * linkOriginal.width, y: linkOriginal.minY + 0.23771 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02187 * linkOriginal.width, y: linkOriginal.minY + 0.25790 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02198 * linkOriginal.width, y: linkOriginal.minY + 0.24558 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.02555 * linkOriginal.width, y: linkOriginal.minY + 0.23478 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.02349 * linkOriginal.width, y: linkOriginal.minY + 0.22984 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.02466 * linkOriginal.width, y: linkOriginal.minY + 0.22861 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.05261 * linkOriginal.width, y: linkOriginal.minY + 0.42377 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05509 * linkOriginal.width, y: linkOriginal.minY + 0.44966 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05359 * linkOriginal.width, y: linkOriginal.minY + 0.43061 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05443 * linkOriginal.width, y: linkOriginal.minY + 0.43941 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.07313 * linkOriginal.width, y: linkOriginal.minY + 0.73314 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.07285 * linkOriginal.width, y: linkOriginal.minY + 0.76258 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.07372 * linkOriginal.width, y: linkOriginal.minY + 0.74239 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.07361 * linkOriginal.width, y: linkOriginal.minY + 0.75471 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.07004 * linkOriginal.width, y: linkOriginal.minY + 0.76552 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.07210 * linkOriginal.width, y: linkOriginal.minY + 0.77045 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.07093 * linkOriginal.width, y: linkOriginal.minY + 0.77168 * linkOriginal.height))
            iconPath.line(to: NSPoint(x: linkOriginal.minX + 0.07004 * linkOriginal.width, y: linkOriginal.minY + 0.76552 * linkOriginal.height))
            iconPath.close()
            iconPath.move(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.44231 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04228 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04475 * linkOriginal.width, y: linkOriginal.minY + 0.44231 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04228 * linkOriginal.width, y: linkOriginal.minY + 0.46814 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.55769 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.04228 * linkOriginal.width, y: linkOriginal.minY + 0.53186 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.04475 * linkOriginal.width, y: linkOriginal.minY + 0.55769 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.05331 * linkOriginal.width, y: linkOriginal.minY + 0.50000 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05084 * linkOriginal.width, y: linkOriginal.minY + 0.55769 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05331 * linkOriginal.width, y: linkOriginal.minY + 0.53186 * linkOriginal.height))
            iconPath.curve(to: NSPoint(x: linkOriginal.minX + 0.04779 * linkOriginal.width, y: linkOriginal.minY + 0.44231 * linkOriginal.height), controlPoint1: NSPoint(x: linkOriginal.minX + 0.05331 * linkOriginal.width, y: linkOriginal.minY + 0.46814 * linkOriginal.height), controlPoint2: NSPoint(x: linkOriginal.minX + 0.05084 * linkOriginal.width, y: linkOriginal.minY + 0.44231 * linkOriginal.height))
            iconPath.close()
            iconPath.windingRule = .evenOddWindingRule
            thirdLinkColor.setFill()
            iconPath.fill()


            //// Text Drawing
            let textRect = NSRect(x: linkOriginal.minX + fastFloor(linkOriginal.width * 0.12132 + 0.5), y: linkOriginal.minY + fastFloor(linkOriginal.height * 0.13462) + 0.5, width: fastFloor(linkOriginal.width * 1.00000 + 0.5) - fastFloor(linkOriginal.width * 0.12132 + 0.5), height: fastFloor(linkOriginal.height * 0.94231) - fastFloor(linkOriginal.height * 0.13462))
            let textStyle = NSMutableParagraphStyle()
            textStyle.alignment = .left
            let textFontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: thirdLinkColor, NSParagraphStyleAttributeName: textStyle]

            let textTextHeight: CGFloat = learnMoreLinkString.boundingRect(with: NSSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes).height
            let textTextRect: NSRect = NSRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(textRect)
            learnMoreLinkString.draw(in: textTextRect.offsetBy(dx: 0, dy: 1), withAttributes: textFontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }


        if (pressed) {
            //// linkPressed
            //// icon 2 Drawing
            let icon2Path = NSBezierPath()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.77614 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02139 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.07419 * linkPressed.width, y: linkPressed.minY + 1.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.77620 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.09559 * linkPressed.width, y: linkPressed.minY + 0.22386 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.07420 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02140 * linkPressed.width, y: linkPressed.minY + 0.00000 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.00000 * linkPressed.width, y: linkPressed.minY + 0.22380 * linkPressed.height))
            icon2Path.close()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.07004 * linkPressed.width, y: linkPressed.minY + 0.76552 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.04297 * linkPressed.width, y: linkPressed.minY + 0.57653 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04050 * linkPressed.width, y: linkPressed.minY + 0.55063 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04199 * linkPressed.width, y: linkPressed.minY + 0.56969 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04115 * linkPressed.width, y: linkPressed.minY + 0.56089 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.02246 * linkPressed.width, y: linkPressed.minY + 0.26715 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.02273 * linkPressed.width, y: linkPressed.minY + 0.23771 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02187 * linkPressed.width, y: linkPressed.minY + 0.25790 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02198 * linkPressed.width, y: linkPressed.minY + 0.24558 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.02555 * linkPressed.width, y: linkPressed.minY + 0.23478 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.02349 * linkPressed.width, y: linkPressed.minY + 0.22984 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.02466 * linkPressed.width, y: linkPressed.minY + 0.22861 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.05261 * linkPressed.width, y: linkPressed.minY + 0.42377 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05509 * linkPressed.width, y: linkPressed.minY + 0.44966 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05359 * linkPressed.width, y: linkPressed.minY + 0.43061 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05443 * linkPressed.width, y: linkPressed.minY + 0.43941 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.07313 * linkPressed.width, y: linkPressed.minY + 0.73314 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.07285 * linkPressed.width, y: linkPressed.minY + 0.76258 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.07372 * linkPressed.width, y: linkPressed.minY + 0.74239 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.07361 * linkPressed.width, y: linkPressed.minY + 0.75471 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.07004 * linkPressed.width, y: linkPressed.minY + 0.76552 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.07210 * linkPressed.width, y: linkPressed.minY + 0.77045 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.07093 * linkPressed.width, y: linkPressed.minY + 0.77168 * linkPressed.height))
            icon2Path.line(to: NSPoint(x: linkPressed.minX + 0.07004 * linkPressed.width, y: linkPressed.minY + 0.76552 * linkPressed.height))
            icon2Path.close()
            icon2Path.move(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.44231 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04228 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04475 * linkPressed.width, y: linkPressed.minY + 0.44231 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04228 * linkPressed.width, y: linkPressed.minY + 0.46814 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.55769 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.04228 * linkPressed.width, y: linkPressed.minY + 0.53186 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.04475 * linkPressed.width, y: linkPressed.minY + 0.55769 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.05331 * linkPressed.width, y: linkPressed.minY + 0.50000 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05084 * linkPressed.width, y: linkPressed.minY + 0.55769 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05331 * linkPressed.width, y: linkPressed.minY + 0.53186 * linkPressed.height))
            icon2Path.curve(to: NSPoint(x: linkPressed.minX + 0.04779 * linkPressed.width, y: linkPressed.minY + 0.44231 * linkPressed.height), controlPoint1: NSPoint(x: linkPressed.minX + 0.05331 * linkPressed.width, y: linkPressed.minY + 0.46814 * linkPressed.height), controlPoint2: NSPoint(x: linkPressed.minX + 0.05084 * linkPressed.width, y: linkPressed.minY + 0.44231 * linkPressed.height))
            icon2Path.close()
            icon2Path.windingRule = .evenOddWindingRule
            thirdLinkColorPressed.setFill()
            icon2Path.fill()


            //// Text 2 Drawing
            let text2Rect = NSRect(x: linkPressed.minX + fastFloor(linkPressed.width * 0.12132 + 0.5), y: linkPressed.minY + fastFloor(linkPressed.height * 0.13462) + 0.5, width: fastFloor(linkPressed.width * 1.00000 + 0.5) - fastFloor(linkPressed.width * 0.12132 + 0.5), height: fastFloor(linkPressed.height * 0.94231) - fastFloor(linkPressed.height * 0.13462))
            let text2Style = NSMutableParagraphStyle()
            text2Style.alignment = .left
            let text2FontAttributes = [NSFontAttributeName: NSFont.systemFont(ofSize: 14), NSForegroundColorAttributeName: thirdLinkColorPressed, NSParagraphStyleAttributeName: text2Style]

            let text2TextHeight: CGFloat = learnMoreLinkString.boundingRect(with: NSSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes).height
            let text2TextRect: NSRect = NSRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight)
            NSGraphicsContext.saveGraphicsState()
            NSRectClip(text2Rect)
            learnMoreLinkString.draw(in: text2TextRect.offsetBy(dx: 0, dy: 1), withAttributes: text2FontAttributes)
            NSGraphicsContext.restoreGraphicsState()


        }
    }

}
